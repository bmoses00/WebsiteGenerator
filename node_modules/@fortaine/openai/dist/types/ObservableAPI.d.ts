import { HttpFile } from '../http/http.js';
import { Configuration } from '../configuration.js';
import { Observable } from '../rxjsStub.js';
import { CreateAnswerRequest } from '../models/CreateAnswerRequest.js';
import { CreateAnswerResponse } from '../models/CreateAnswerResponse.js';
import { CreateClassificationRequest } from '../models/CreateClassificationRequest.js';
import { CreateClassificationResponse } from '../models/CreateClassificationResponse.js';
import { CreateCompletionRequest } from '../models/CreateCompletionRequest.js';
import { CreateCompletionResponse } from '../models/CreateCompletionResponse.js';
import { CreateEditRequest } from '../models/CreateEditRequest.js';
import { CreateEditResponse } from '../models/CreateEditResponse.js';
import { CreateEmbeddingRequest } from '../models/CreateEmbeddingRequest.js';
import { CreateEmbeddingResponse } from '../models/CreateEmbeddingResponse.js';
import { CreateFineTuneRequest } from '../models/CreateFineTuneRequest.js';
import { CreateImageRequest } from '../models/CreateImageRequest.js';
import { CreateModerationRequest } from '../models/CreateModerationRequest.js';
import { CreateModerationResponse } from '../models/CreateModerationResponse.js';
import { CreateSearchRequest } from '../models/CreateSearchRequest.js';
import { CreateSearchResponse } from '../models/CreateSearchResponse.js';
import { DeleteFileResponse } from '../models/DeleteFileResponse.js';
import { DeleteModelResponse } from '../models/DeleteModelResponse.js';
import { Engine } from '../models/Engine.js';
import { FineTune } from '../models/FineTune.js';
import { ImagesResponse } from '../models/ImagesResponse.js';
import { ListEnginesResponse } from '../models/ListEnginesResponse.js';
import { ListFilesResponse } from '../models/ListFilesResponse.js';
import { ListFineTuneEventsResponse } from '../models/ListFineTuneEventsResponse.js';
import { ListFineTunesResponse } from '../models/ListFineTunesResponse.js';
import { ListModelsResponse } from '../models/ListModelsResponse.js';
import { Model } from '../models/Model.js';
import { OpenAIFile } from '../models/OpenAIFile.js';
import { OpenAIApiRequestFactory, OpenAIApiResponseProcessor } from "../apis/OpenAIApi.js";
export declare class ObservableOpenAIApi {
    private requestFactory;
    private responseProcessor;
    private configuration;
    constructor(configuration: Configuration, requestFactory?: OpenAIApiRequestFactory, responseProcessor?: OpenAIApiResponseProcessor);
    cancelFineTune(fineTuneId: string, _options?: Configuration): Observable<FineTune>;
    createAnswer(createAnswerRequest: CreateAnswerRequest, _options?: Configuration): Observable<CreateAnswerResponse>;
    createClassification(createClassificationRequest: CreateClassificationRequest, _options?: Configuration): Observable<CreateClassificationResponse>;
    createCompletion(createCompletionRequest: CreateCompletionRequest, _options?: Configuration): Observable<CreateCompletionResponse>;
    createEdit(createEditRequest: CreateEditRequest, _options?: Configuration): Observable<CreateEditResponse>;
    createEmbedding(createEmbeddingRequest: CreateEmbeddingRequest, _options?: Configuration): Observable<CreateEmbeddingResponse>;
    createFile(file: HttpFile, purpose: string, _options?: Configuration): Observable<OpenAIFile>;
    createFineTune(createFineTuneRequest: CreateFineTuneRequest, _options?: Configuration): Observable<FineTune>;
    createImage(createImageRequest: CreateImageRequest, _options?: Configuration): Observable<ImagesResponse>;
    createImageEdit(image: HttpFile, prompt: string, mask?: HttpFile, n?: number, size?: string, responseFormat?: string, user?: string, _options?: Configuration): Observable<ImagesResponse>;
    createImageVariation(image: HttpFile, n?: number, size?: string, responseFormat?: string, user?: string, _options?: Configuration): Observable<ImagesResponse>;
    createModeration(createModerationRequest: CreateModerationRequest, _options?: Configuration): Observable<CreateModerationResponse>;
    createSearch(engineId: string, createSearchRequest: CreateSearchRequest, _options?: Configuration): Observable<CreateSearchResponse>;
    deleteFile(fileId: string, _options?: Configuration): Observable<DeleteFileResponse>;
    deleteModel(model: string, _options?: Configuration): Observable<DeleteModelResponse>;
    downloadFile(fileId: string, _options?: Configuration): Observable<string>;
    listEngines(_options?: Configuration): Observable<ListEnginesResponse>;
    listFiles(_options?: Configuration): Observable<ListFilesResponse>;
    listFineTuneEvents(fineTuneId: string, stream?: boolean, _options?: Configuration): Observable<ListFineTuneEventsResponse>;
    listFineTunes(_options?: Configuration): Observable<ListFineTunesResponse>;
    listModels(_options?: Configuration): Observable<ListModelsResponse>;
    retrieveEngine(engineId: string, _options?: Configuration): Observable<Engine>;
    retrieveFile(fileId: string, _options?: Configuration): Observable<OpenAIFile>;
    retrieveFineTune(fineTuneId: string, _options?: Configuration): Observable<FineTune>;
    retrieveModel(model: string, _options?: Configuration): Observable<Model>;
}
