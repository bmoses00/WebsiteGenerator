import { RequestContext } from "./http/http.js";
export class ServerConfiguration {
    url;
    variableConfiguration;
    constructor(url, variableConfiguration) {
        this.url = url;
        this.variableConfiguration = variableConfiguration;
    }
    setVariables(variableConfiguration) {
        Object.assign(this.variableConfiguration, variableConfiguration);
    }
    getConfiguration() {
        return this.variableConfiguration;
    }
    getUrl() {
        let replacedUrl = this.url;
        for (const key in this.variableConfiguration) {
            var re = new RegExp("{" + key + "}", "g");
            replacedUrl = replacedUrl.replace(re, this.variableConfiguration[key]);
        }
        return replacedUrl;
    }
    makeRequestContext(endpoint, httpMethod, configuration) {
        return new RequestContext(this.getUrl() + endpoint, httpMethod, configuration);
    }
}
export const server1 = new ServerConfiguration("https://api.openai.com/v1", {});
export const servers = [server1];
//# sourceMappingURL=servers.js.map